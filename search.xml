<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Educational Codeforces Round 152</title>
      <link href="/2023/07/30/Educational%20Codeforces%20Round%20152/"/>
      <url>/2023/07/30/Educational%20Codeforces%20Round%20152/</url>
      
        <content type="html"><![CDATA[<h1 id="C-Binary-String-Copying"><a href="#C-Binary-String-Copying" class="headerlink" title="C. Binary String Copying"></a>C. Binary String Copying</h1><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定 $01$ 字符串 $s$ ，每次将区间 $[l,r]$ 的字符排序（从小到大），问 $m$ 次排序中共出现多少种字符串</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑区间 $[a,x,y,b]$ ，如果 $s_{[a,x]}&#x3D;0,s_{[y,b]}&#x3D;1$ ，显然对区间 $[a,b]$ 和区间 $[x,y]$ 排序后的结果是相同的</p><p>这样我们对于每个区间 $[a,b]$ ，找出最小（最近）的 $[x,y]$ ，利用 <code>set</code> 统计不重复的个数即可</p><p>如何寻找 $[x,y]$ ？</p><p>我们分别用 $l,r$ 记录每一位左边的第一个 $0$ 的位置和右边的第一个 $1$ 的位置，那么就有 $x&#x3D;r_a,y&#x3D;l_b$</p><h2 id="Code-C"><a href="#Code-C" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">l</span><span class="params">(n)</span>, <span class="title">r</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = n, i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            p = i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r[i] = p;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = <span class="number">-1</span>, i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            p = i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l[i] = p;</span><br><span class="line">    set&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; st;</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        a--, b--;</span><br><span class="line">        <span class="keyword">if</span> (s[a] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            a = r[a];</span><br><span class="line">        <span class="keyword">if</span> (s[b] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            b = l[b];</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">            st.<span class="built_in">insert</span>(&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            st.<span class="built_in">insert</span>(&#123;a, b&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; st.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Array-Painting"><a href="#D-Array-Painting" class="headerlink" title="D. Array Painting"></a>D. Array Painting</h2><h2 id="Analysis-1"><a href="#Analysis-1" class="headerlink" title="Analysis"></a>Analysis</h2><p>有 $n$ 个格子，每个格子标有 $0,1$ 或 $2$ ，一开始全部格子都被涂成蓝色</p><p>你可以进行如下操作：</p><ul><li>花费一个硬币选择任意一个蓝色的格子把它涂成红色</li><li>选择一个数字非 $0$ 的红色的格子，将这个格子上的数字减 $1$ ，并把一个相邻的格子涂成红色</li></ul><p>问将所有格子涂成红色至少需要多少个硬币</p><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><p>贪心的，对于一个标有数字 $2$ 的格子，我们花费一个硬币将其涂成红色之后，它可以一直往两边延申直至遇到数字为 $0$ 的格子，同样的，对于一个标有数字 $1$ 的格子，我们花费一个硬币将其涂成红色之后，它可以往一边（左或右）延申直至遇到数字为 $0$ 的格子</p><p>那么我们只需要根据数字 $0$ 对格子分块，最后统计有多少块即可</p><p>如下面的例子：</p><p><img src="/../img/educf152-d-example.png"></p><p>对于每一块，如果块中不包含数字 $2$ ，那么这一块最多可以往一边带一个 $0$ ，反之则可以在两边都带上一个 $0$ </p><h2 id="Code-C-1"><a href="#Code-C-1" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">if</span> (a[p] &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (p + <span class="number">1</span> &lt; n &amp;&amp; a[p + <span class="number">1</span>] &gt; <span class="number">0</span>)</span><br><span class="line">                p++;</span><br><span class="line">            p += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (p + <span class="number">1</span> &lt; n &amp;&amp; a[p + <span class="number">1</span>] &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p++;</span><br><span class="line">                <span class="keyword">if</span> (a[p] == <span class="number">2</span>)</span><br><span class="line">                    f = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f)</span><br><span class="line">                p += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Edu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 888 (Div. 3)</title>
      <link href="/2023/07/30/Codeforces%20Round%20888%20(Div.%203)/"/>
      <url>/2023/07/30/Codeforces%20Round%20888%20(Div.%203)/</url>
      
        <content type="html"><![CDATA[<h1 id="F-Lisa-and-the-Martians"><a href="#F-Lisa-and-the-Martians" class="headerlink" title="F. Lisa and the Martians"></a>F. Lisa and the Martians</h1><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定一个序列 $a$ ，求使得 $(a_i\oplus x)\&amp; (a_j\oplus x)$ 最大的对应的 $i,j,x\ (0\leq x&lt; 2^k )$</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>首先对于任意的 $a_i,a_j$ ，我们思考如何使得结果最大。很显然，要使最后的结果最大，那么结果的每一位上应该尽可能的是 $1$ </p><p>考虑 $a_i$ 和 $a_j$ 第 $k$ 位上的情况：</p><ul><li><p>$a_{i,k}&#x3D;a_{j,k}&#x3D;0$ ，那么令 $x_k&#x3D;1,ans_k&#x3D;(a_{i,k}\oplus x_k)\&amp;(a_{j,k}\oplus x_k)&#x3D;1$</p></li><li><p>$a_{i,k}&#x3D;a_{j,k}&#x3D;1$ ，那么令 $x_k&#x3D;0,ans_k&#x3D;(a_{i,k}\oplus x_k)\&amp;(a_{j,k}\oplus x_k)&#x3D;1$ </p></li><li><p>$a_{i,k}$ 和 $a_{j,k}$ 不同，显然这时无论 $x_k&#x3D;0$ 或 $x_k&#x3D;1$ ， $ans_k&#x3D;0$</p></li></ul><p>这样，我们可以得出 $x&#x3D;a_i\oplus a_j,ans&#x3D;^\sim x \&amp; ((1&lt;&lt;k)-1)$</p><p>然而这样的时间复杂度为 $o(n^2)$ ，显然是不行的</p><p>因为我们要得到最大的 $ans$ ，反过来，我们只需找到最小的 $x$ 即可，即找到最小的 $a_i\oplus a_j$</p><p>注意到对于异或$\oplus$ ，有下面的一条性质：</p><ul><li>对于非负整数  $x,y,z\ (x&lt;y&lt;z)$ ，有 $\min (x\oplus y,y\oplus z)&lt;x\oplus z$</li></ul><p>证明如下：</p><ul><li><p>假设 $x$ 和 $z$ 的后 $k-1$ 位是相同的，第 $k$ 位是不同的，因为这里  $x&lt;z$ ，故 $x_k&#x3D;0,z_k&#x3D;1$ ，则 $x\oplus z\geq 2^k$ </p><p>因为 $x&lt;y&lt;z$ ，因此 $y$ 的后 $k-1$ 位和 $x,z$ 均相同，若 $y_k&#x3D;0$ ，则 $x\oplus y&lt;2^k$ ，若 $y_k&#x3D;1$ ，则 $y\oplus z&lt;2^k$ </p><p>故有 $\min (x\oplus y,y\oplus z)&lt;x\oplus z$</p></li></ul><p>这样，我们只要将序列 $a$ 排序之后，依次判断 $a_i$ 和 $a_{i+1}$ 求出答案即可，这样的时间复杂度是 $O(n)$ 的</p><h2 id="Code-C"><a href="#Code-C" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i].first, a[i].second = i;</span><br><span class="line">    <span class="type">int</span> ans, l, r, res = -INF;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = i + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> tmp = ((<span class="number">1</span> &lt;&lt; k) - <span class="number">1</span>) &amp; (~(a[i].first ^ a[j].first));</span><br><span class="line">        <span class="keyword">if</span> (tmp &gt; res)</span><br><span class="line">            res = tmp, ans = (a[i].first ^ tmp) &amp; (a[j].first ^ tmp), l = <span class="built_in">min</span>(a[i].second, a[j].second), r = <span class="built_in">max</span>(a[i].second, a[j].second);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="G-Vlad-and-the-Mountains"><a href="#G-Vlad-and-the-Mountains" class="headerlink" title="G. Vlad and the Mountains"></a>G. Vlad and the Mountains</h1><h2 id="Analysis-1"><a href="#Analysis-1" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定一个无向图， $q$ 次询问，问能否在初始体力为 $e$ 的情况下，从 $a$ 点走到 $b$ 点。每次从 $i$ 点走到 $j$ 点消耗体力 $h_j-h_i$ ，注意若 $h_j-h_i$ 是负数，那么体力会恢复</p><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><p>对于每次询问，我们需要处理的问题是在不访问高度大于 $h_a+e$ 的节点的情况下能否从 $a$ 走到 $b$ </p><p>那么我们将询问按 $h_a+e$ 排序，用并查集维护在不访问高度不超过当前的 $h_a+e$ 的节点的情况下的连通情况，每次询问即是查询当前维护的并查集中 $a,b$ 是否连通</p><h2 id="Code-C-1"><a href="#Code-C-1" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">h</span><span class="params">(n)</span>, <span class="title">fa</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; h[i], fa[i] = i;</span><br><span class="line">    vector&lt;tuple&lt;<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">g</span>(m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;[cost, u, v] : g)</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v, u--, v--, cost = <span class="built_in">max</span>(h[u], h[v]);</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    vector&lt;tuple&lt;<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">vec</span>(q);</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;&amp;[w, a, b, idx] : vec)</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; w, a--, b--, w += h[a], idx = p++;</span><br><span class="line">    <span class="built_in">sort</span>(g.<span class="built_in">begin</span>(), g.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    function&lt;<span class="type">int</span>(<span class="type">int</span>)&gt; findfa = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fa[x] != x)</span><br><span class="line">            fa[x] = <span class="built_in">findfa</span>(fa[x]);</span><br><span class="line">        <span class="keyword">return</span> fa[x];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">ans</span><span class="params">(q)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [w, a, b, idx] : vec)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (; cnt &lt; m; cnt++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> [cost, u, v] = g[cnt];</span><br><span class="line">            <span class="keyword">if</span> (cost &gt; w)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            fa[<span class="built_in">findfa</span>(u)] = <span class="built_in">findfa</span>(v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">findfa</span>(a) == <span class="built_in">findfa</span>(b))</span><br><span class="line">            ans[idx] = <span class="string">&quot;YES&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans[idx] = <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Div. 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 887 (Div. 2)</title>
      <link href="/2023/07/30/Codeforces%20Round%20887%20(Div.%202)/"/>
      <url>/2023/07/30/Codeforces%20Round%20887%20(Div.%202)/</url>
      
        <content type="html"><![CDATA[<h1 id="B-Fibonaccharsis"><a href="#B-Fibonaccharsis" class="headerlink" title="B. Fibonaccharsis"></a>B. Fibonaccharsis</h1><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定 $n$ 和 $k$，求有多少个非负的、单调不减的、且满足 $f_i&#x3D;f_{i-1}+f_{i-2},\ i\geq 3$ 的数列使得 $f_k&#x3D;n$ ，其中 $f_1$ 和 $f_2$ 可以是任意的非负整数</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>直接暴力枚举 $f_{k-1}$ ，不断相减求出数列，最坏情况下时间复杂度为 $O(n\cdot k)$ </p><p>但实际上，注意到 $f_i&#x3D;f_{i-1}+f_{i-2}$ ，且 $f_i\geq 0$ ，则有 $f_i\geq 2f_{i-2}$ 。因此在至多经过 $\log N$ 次相减之后，必会有 $f_i&lt;0$ ，实际上的时间复杂度为 $O(n\cdot \log n)$ </p><h2 id="Code-C"><a href="#Code-C" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = i, b = n;</span><br><span class="line">        <span class="type">bool</span> f = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; k<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = a;</span><br><span class="line">            a = b - a;</span><br><span class="line">            b = tmp;</span><br><span class="line">            f &amp;= (a &lt;= b) &amp; (<span class="built_in">min</span>(a, b) &gt;= <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (!f)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">            ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Ntarsis’-Set"><a href="#C-Ntarsis’-Set" class="headerlink" title="C. Ntarsis’ Set"></a>C. Ntarsis’ Set</h1><h2 id="Analysis-1"><a href="#Analysis-1" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定数列 $S&#x3D;{1,2,3,\dots,10^{1000}}$ 和数列 $a$ ，每次删去 $S$ 中的第 $a_1,a_2,\dots,a_n$ 个数字，问经过 $k$ 次后 $S$ 中剩下的最小的数字是多少</p><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><p>观察下面的样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 3 5 6 7</span><br></pre></td></tr></table></figure><p><img src="/../img/cf887-c-example.png"></p><p>可以看出对于每一个位置的数字，经过一次操作之后他的位置会往前 $x$ 位， $x$ 表示当前位置前面一共删除了几个数字</p><p>如数字 $9$ ，它的初始位置为 $9$ ，第一次操作它的前面一共删除了 $5$ 位数字，则数字 $9$ 的位置变为 $9-5&#x3D;4$ ，同理，第二次操作它的前面一共删除了 $2$ 个数字，则它的位置变为 $4-2&#x3D;2$ </p><p>那么我们可以反着从 $1$ 开始推，不断判断当前最小的数字可以由哪一个位置的数字过来，经过 $k$ 次即得到答案</p><h2 id="Code-C-1"><a href="#Code-C-1" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1</span>, p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (p &lt;= n &amp;&amp; ans + p - <span class="number">1</span> &gt;= a[p])</span><br><span class="line">            p++;</span><br><span class="line">        ans += p - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Imbalanced-Arrays"><a href="#D-Imbalanced-Arrays" class="headerlink" title="D. Imbalanced Arrays"></a>D. Imbalanced Arrays</h1><h2 id="Analysis-2"><a href="#Analysis-2" class="headerlink" title="Analysis"></a>Analysis</h2><p>给定数列 $a$ ，构造数列 $b$ 满足以下条件：</p><ul><li><p>$-n\leq b_i\leq n,\ b_i\neq 0$</p></li><li><p>不存在 $(i,j)$ 使得 $b_i+b_j&#x3D;0$</p></li><li><p>对于 $i$ ，有且仅有 $a_i$ 个 $j$ 使得 $b_i+b_j&gt;0$</p></li></ul><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h2><p>从每对 $(n,-n),(n-1,-(n-1)),\dots,(1,-1)$ 中各选一个构造数列 $b$ ，显然我们可以得到一个更强的结论</p><p>首先考虑从 $(n,-n)$ 中选择一个，若存在 $a_x&#x3D;0$ ，那么显然我们可以使 $b_x&#x3D;-n$ ，这样无论后面如何构造， $b_x$ 都能满足题意。反之，若存在 $a_x&#x3D;n$ ，那么我们可以使 $b_x&#x3D;n$ ，同时用 $res$ 记录影响（因为对于后面的 $b_y$ ，始终有 $b_x+b_y&gt;0$）</p><p>接下来考虑每对 $(i,-i)$ ，显然的，若存在 $a_x&#x3D;0$ ，那么显然我们可以使 $b_x&#x3D;-i$ 。反之，若存在 $a_x&#x3D;i+res$ ，那么我们可以使 $b_x&#x3D;i$ </p><p>若存在一对 $(i,-i)$ ，两种情况都不满足，那么这样的数列 $b$ 即是不存在的</p><h2 id="Code-C-2"><a href="#Code-C-2" class="headerlink" title="Code (C++)"></a>Code (C++)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i].first, a[i].second = i;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">begin</span>() + n + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n, res = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[l].first - res == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[a[l].second] = -i;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[r].first - res == i)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[a[r].second] = i;</span><br><span class="line">            r--;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Div. 2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
